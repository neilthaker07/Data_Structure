<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
<fullyQualifiedTypeName name="linkedListEx.PartitionElement"/>
<fullyQualifiedTypeName name="linkedListEx.PartitionBook"/>
<fullyQualifiedTypeName name="linkedListEx.ReverseNoSum"/>
<fullyQualifiedTypeName name="linkedListEx.PallindromeLinkedList"/>
<fullyQualifiedTypeName name="linkedListEx.PlaindromeLinkedListStack"/>
<fullyQualifiedTypeName name="linkedListEx.CircularLinkedList"/>
<fullyQualifiedTypeName name="java.lang.System"/>
<fullyQualifiedTypeName name="java.util.Scanner"/>
<fullyQualifiedTypeName name="linkedListEx.CreationLinkedList"/>
<fullyQualifiedTypeName name="lambda.LambdaFilter"/>
<fullyQualifiedTypeName name="lambda.Continent"/>
<fullyQualifiedTypeName name="lambda.Country"/>
<fullyQualifiedTypeName name="java.util.stream.Stream"/>
<fullyQualifiedTypeName name="lambda.LambdaRandom"/>
<fullyQualifiedTypeName name="java.util.List"/>
<fullyQualifiedTypeName name="java.util.Random"/>
<fullyQualifiedTypeName name="java.util.stream.Collectors"/>
<fullyQualifiedTypeName name="stackQueue.MyStack.StackNode"/>
<fullyQualifiedTypeName name="stackQueue.MyStack"/>
<fullyQualifiedTypeName name="stackQueue.MyQueue.QueueNode"/>
<fullyQualifiedTypeName name="stackQueue.MyQueueArray.Node"/>
<fullyQualifiedTypeName name="java.util.ArrayList"/>
<fullyQualifiedTypeName name="stackQueue.MyStackArray.Node"/>
<fullyQualifiedTypeName name="java.util.EmptyStackException"/>
<fullyQualifiedTypeName name="stackQueue.CircularQueue.Node"/>
<fullyQualifiedTypeName name="java.util.Hashtable"/>
<fullyQualifiedTypeName name="arraysStrings.MyArrayList"/>
<fullyQualifiedTypeName name="java.lang.Exception"/>
<fullyQualifiedTypeName name="stackQueue.MyQueueArray"/>
<fullyQualifiedTypeName name="java.util.Arrays"/>
<fullyQualifiedTypeName name="java.util.NoSuchElementException"/>
<fullyQualifiedTypeName name="stackQueue.StackOfPlates"/>
<fullyQualifiedTypeName name="stackQueue.MyQueueUse2Stacks"/>
<fullyQualifiedTypeName name="java.util.Stack"/>
<fullyQualifiedTypeName name="stackQueue.SortStackAscendingOrder"/>
<fullyQualifiedTypeName name="stackQueue.SortStackAscending_V2"/>
<fullyQualifiedTypeName name="stackQueue.Dog"/>
<fullyQualifiedTypeName name="stackQueue.Cat"/>
<fullyQualifiedTypeName name="stackQueue.AnimalShelter"/>
<fullyQualifiedTypeName name="stackQueue.Animal"/>
<fullyQualifiedTypeName name="stackQueue.AnimalShelter2Queues"/>
<fullyQualifiedTypeName name="trees.Orders"/>
<fullyQualifiedTypeName name="trees.CustomTree"/>
<fullyQualifiedTypeName name="treesGraphs.DepthFirstSearch"/>
<fullyQualifiedTypeName name="treesGraphs.GraphCreation"/>
<fullyQualifiedTypeName name="java.util.HashSet"/>
<fullyQualifiedTypeName name="treesGraphs.BreadthFristSearch"/>
<fullyQualifiedTypeName name="treesGraphs.BFSWithQueue"/>
<fullyQualifiedTypeName name="java.util.Queue"/>
<fullyQualifiedTypeName name="stackQueue.MyQueue"/>
<fullyQualifiedTypeName name="treesGraphs.NodeGraph"/>
<fullyQualifiedTypeName name="treesGraphs.MyTree"/>
<fullyQualifiedTypeName name="java.lang.StringBuilder"/>
<fullyQualifiedTypeName name="treesGraphs.Node"/>
<fullyQualifiedTypeName name="treesGraphs.TreeWithoutRecursion"/>
<fullyQualifiedTypeName name="java.util.LinkedList"/>
<fullyQualifiedTypeName name="javax.xml.ws.WebServiceRef"/>
<fullyQualifiedTypeName name="treesGraphs.DoublyNodes"/>
<fullyQualifiedTypeName name="treesGraphs.BinaryTreeNoRecursion"/>
<fullyQualifiedTypeName name="treesGraphs.NodeLocal"/>
</qualifiedTypeNameHistroy>
