<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
<fullyQualifiedTypeName name="stackQueue.MyStackArray.Node"/>
<fullyQualifiedTypeName name="java.util.EmptyStackException"/>
<fullyQualifiedTypeName name="stackQueue.CircularQueue.Node"/>
<fullyQualifiedTypeName name="java.util.Hashtable"/>
<fullyQualifiedTypeName name="arraysStrings.MyArrayList"/>
<fullyQualifiedTypeName name="java.lang.Exception"/>
<fullyQualifiedTypeName name="stackQueue.MyQueueArray"/>
<fullyQualifiedTypeName name="java.util.NoSuchElementException"/>
<fullyQualifiedTypeName name="stackQueue.StackOfPlates"/>
<fullyQualifiedTypeName name="stackQueue.MyQueueUse2Stacks"/>
<fullyQualifiedTypeName name="java.util.Stack"/>
<fullyQualifiedTypeName name="stackQueue.SortStackAscendingOrder"/>
<fullyQualifiedTypeName name="stackQueue.SortStackAscending_V2"/>
<fullyQualifiedTypeName name="stackQueue.Dog"/>
<fullyQualifiedTypeName name="stackQueue.Cat"/>
<fullyQualifiedTypeName name="stackQueue.AnimalShelter"/>
<fullyQualifiedTypeName name="stackQueue.Animal"/>
<fullyQualifiedTypeName name="stackQueue.AnimalShelter2Queues"/>
<fullyQualifiedTypeName name="trees.Orders"/>
<fullyQualifiedTypeName name="trees.CustomTree"/>
<fullyQualifiedTypeName name="treesGraphs.DepthFirstSearch"/>
<fullyQualifiedTypeName name="treesGraphs.GraphCreation"/>
<fullyQualifiedTypeName name="java.util.HashSet"/>
<fullyQualifiedTypeName name="treesGraphs.BreadthFristSearch"/>
<fullyQualifiedTypeName name="treesGraphs.BFSWithQueue"/>
<fullyQualifiedTypeName name="stackQueue.MyQueue"/>
<fullyQualifiedTypeName name="treesGraphs.NodeGraph"/>
<fullyQualifiedTypeName name="java.lang.StringBuilder"/>
<fullyQualifiedTypeName name="treesGraphs.TreeWithoutRecursion"/>
<fullyQualifiedTypeName name="javax.xml.ws.WebServiceRef"/>
<fullyQualifiedTypeName name="treesGraphs.DoublyNodes"/>
<fullyQualifiedTypeName name="treesGraphs.BinaryTreeNoRecursion"/>
<fullyQualifiedTypeName name="java.util.List"/>
<fullyQualifiedTypeName name="treesGraphs.LevelOrderTreerecursion"/>
<fullyQualifiedTypeName name="java.util.Queue"/>
<fullyQualifiedTypeName name="treesGraphsBook.MinHeightBSTFromArray"/>
<fullyQualifiedTypeName name="treesGraphs.BSTFromSortedArray"/>
<fullyQualifiedTypeName name="java.lang.ArrayStoreException"/>
<fullyQualifiedTypeName name="treesGraphs.MyTree"/>
<fullyQualifiedTypeName name="treesGraphs.MinimalBSTFromArrayV2"/>
<fullyQualifiedTypeName name="treesGraphs.Node"/>
<fullyQualifiedTypeName name="treesGraphs.ListTreeDepths"/>
<fullyQualifiedTypeName name="java.util.LinkedList"/>
<fullyQualifiedTypeName name="treesGraphs.CheckBalancedTree"/>
<fullyQualifiedTypeName name="java.lang.Math"/>
<fullyQualifiedTypeName name="java.lang.Integer"/>
<fullyQualifiedTypeName name="javax.xml.crypto.dsig.keyinfo.RetrievalMethod"/>
<fullyQualifiedTypeName name="treesGraphs.BTCheckBST"/>
<fullyQualifiedTypeName name="treesGraphs.BTCheckBSTBest"/>
<fullyQualifiedTypeName name="treesGraphs.SuccessorBST"/>
<fullyQualifiedTypeName name="treesGraphs.FirstCommonAncestor"/>
<fullyQualifiedTypeName name="treesGraphs.T2SubtreeT1"/>
<fullyQualifiedTypeName name="java.util.Arrays"/>
<fullyQualifiedTypeName name="java.util.ArrayList"/>
<fullyQualifiedTypeName name="java.util.Collections"/>
<fullyQualifiedTypeName name="treesGraphs.RandomNodeSelection"/>
<fullyQualifiedTypeName name="treesGraphs.NodeLocal"/>
<fullyQualifiedTypeName name="java.util.Random"/>
<fullyQualifiedTypeName name="treesGraphs.RandomSelectionTree.TreeNodes"/>
<fullyQualifiedTypeName name="treesGraphs.TreeNodes"/>
</qualifiedTypeNameHistroy>
